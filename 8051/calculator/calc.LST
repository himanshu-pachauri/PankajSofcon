C51 COMPILER V9.03   CALC                                                                  01/16/2017 14:30:30 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE CALC
OBJECT MODULE PLACED IN calc.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE calc.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<stdio.h>
   2          #include<reg51.h>
   3          sbit rs=P3^0;
   4          sbit rw=P3^1;
   5          sbit en=P3^2;
   6          int lcd_keypad();
   7          void operation(int x,char c,int y);
   8          void lcd_integer(int x);
   9          void lcd_data(unsigned char x);
  10          void lcd_command(unsigned char x);
  11          void string(unsigned char *p)
  12          {
  13   1      while(*p)
  14   1      {
  15   2      lcd_data(*p++);
  16   2      }
  17   1      }
  18          void delay()
  19          {
  20   1      int i=12000;
  21   1      while(i--);
  22   1      }
  23          void main()               //MAIN FUNCTION
  24          {int x,y;
  25   1      char o;
  26   1      lcd_command(0x38);
  27   1      lcd_command(0x0c);
  28   1      lcd_command(0x01);
  29   1      lcd_command(0x0e);
  30   1      lcd_command(0x80);
  31   1      lcd_command(0x0c);
  32   1      string("ON");
  33   1      delay();
  34   1      delay();
  35   1      delay();
  36   1      delay();
  37   1      lcd_command(0x01);
  38   1      while(1) 
  39   1      {
  40   2      x=lcd_keypad();
  41   2      lcd_integer(x);
  42   2      while(lcd_keypad()==x);
  43   2      
  44   2      o=lcd_keypad();
  45   2      lcd_data(o);
  46   2      while(lcd_keypad()==o);
  47   2      
  48   2      y=lcd_keypad();
  49   2      lcd_integer(y);
  50   2      delay();
  51   2      lcd_data('=');
  52   2      operation(x,o,y);
  53   2      }
  54   1      }
  55          int  lcd_keypad()        //KEYPAD FUNCTION
C51 COMPILER V9.03   CALC                                                                  01/16/2017 14:30:30 PAGE 2   

  56          {
  57   1      int result;
  58   1      int i,j,k;
  59   1      P2=0x0f;
  60   1      while(P2==0x0f);
  61   1      i=P2;
  62   1      P2=0xf0;
  63   1      while(P2==0xf0);
  64   1      j=P2;
  65   1      j=j>>4;           
  66   1      if((i==0x0e)&&(j==0x0e))
  67   1      {
  68   2      k=0x01;                   //one
  69   2      return k;
  70   2      delay();
  71   2      }                        
  72   1      else if((i==0x0d)&&(j==0x0e))
  73   1      {
  74   2      k=0x02;                   //two
  75   2      return k;
  76   2      delay();
  77   2      }
  78   1      else if((i==0x0b)&&(j==0x0e))
  79   1      {
  80   2      k=0x03;                   //three
  81   2      return k;
  82   2      delay();
  83   2      }
  84   1      else if((i==0x07)&&(j==0x0e))
  85   1      {
  86   2      k='+';                    //add
  87   2      return k;
  88   2      delay();
  89   2      }
  90   1      else if((i==0x0e)&&(j==0x0d))
  91   1      {
  92   2      k=0x04;                   //four
  93   2      return k;
  94   2      delay();
  95   2      }                        
  96   1      else if((i==0x0d)&&(j==0x0d))
  97   1      {
  98   2      k=0x05;                   //five
  99   2      return k;
 100   2      delay();
 101   2      }
 102   1      else if((i==0x0b)&&(j==0x0d))
 103   1      {
 104   2      k=0x06;                   //six
 105   2      return k;
 106   2      delay();
 107   2      }
 108   1      else if((i==0x07)&&(j==0x0d))
 109   1      {
 110   2      k='-';                    //sub
 111   2      return k;
 112   2      delay();
 113   2      }
 114   1      else if((i==0x0e)&&(j==0x0b))
 115   1      {
 116   2      k=0x07;                   //seven
 117   2      return k;
C51 COMPILER V9.03   CALC                                                                  01/16/2017 14:30:30 PAGE 3   

 118   2      delay();
 119   2      }                        
 120   1      else if((i==0x0d)&&(j==0x0b))
 121   1      {
 122   2      k=0x08;                   //eight
 123   2      return k;
 124   2      delay();
 125   2      }
 126   1      else if((i==0x0b)&&(j==0x0b))
 127   1      {
 128   2      k=0x09;                   //nine
 129   2      return k;
 130   2      delay();
 131   2      }
 132   1      else if((i==0x07)&&(j==0x0b))
 133   1      {
 134   2      k='*';                    //mul                                 
 135   2      return k;
 136   2      delay();
 137   2      }
 138   1      else if((i==0x0e)&&(j==0x07))
 139   1      {
 140   2      k='C';                    //clear
 141   2      return k;
 142   2      delay();
 143   2      }                        
 144   1      else if((i==0x0d)&&(j==0x07))
 145   1      {
 146   2      k=0x00;                   //zero
 147   2      lcd_integer(k);
 148   2      delay();
 149   2      }
 150   1      else if((i==0x0b)&&(j==0x07))
 151   1      {
 152   2      k='=';                    //equal to
 153   2      return k;
 154   2      delay();
 155   2      }
 156   1      else if((i==0x07)&&(j==0x07))
 157   1      {
 158   2      k='/';                    //div
 159   2       return k;
 160   2      delay();
 161   2      }
 162   1      return k;
 163   1      }
*** WARNING C280 IN LINE 57 OF calc.c: 'result': unreferenced local variable
 164          void operation(int x,char c,int y)
 165          {
 166   1      int result;
 167   1      switch(c)
 168   1      {
 169   2         case '+':
 170   2           result=x+y;
 171   2           lcd_integer(result);
 172   2             break;
 173   2      
 174   2         case '-':
 175   2           result=x-y;
 176   2           lcd_integer(result);
 177   2             break;
 178   2       
C51 COMPILER V9.03   CALC                                                                  01/16/2017 14:30:30 PAGE 4   

 179   2         case '*':
 180   2           result=x*y;
 181   2           lcd_integer(result);
 182   2             break;
 183   2         
 184   2         case '/':
 185   2           result=x/y;
 186   2           lcd_integer(result);
 187   2             break;
 188   2      }
 189   1      }
 190          void lcd_integer(int x)
 191          {       
 192   1      unsigned char a[10];  
 193   1      sprintf(a,"%d",x);
 194   1      string(a);
 195   1      }
 196          void lcd_data(unsigned char x)
 197          {
 198   1      P1=x;
 199   1      rs=1;
 200   1      rw=0;
 201   1      en=1;
 202   1      delay();
 203   1      en=0;
 204   1      }
 205          void lcd_command(unsigned char x)
 206          {
 207   1      P1=x;
 208   1      rs=0;
 209   1      rw=0;
 210   1      en=1;
 211   1      delay();
 212   1      en=0;
 213   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    782    ----
   CONSTANT SIZE    =      6    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      32
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
